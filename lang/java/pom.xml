<?xml version="1.0" encoding="UTF-8"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at
       https://www.apache.org/licenses/LICENSE-2.0
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.apache.avro</groupId>
    <artifactId>avro-toplevel</artifactId>
    <version>1.11.0-SNAPSHOT</version>
    <relativePath>../../</relativePath>
  </parent>

  <artifactId>avro-parent</artifactId>
  <packaging>pom</packaging>

  <name>Apache Avro Java</name>
  <url>https://avro.apache.org</url>
  <description>Avro parent Java project</description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <main.basedir>${project.parent.basedir}</main.basedir>

    <!-- version properties for dependencies -->

    <hadoop.version>3.2.1</hadoop.version>
    <jackson.version>2.11.0</jackson.version>
    <jackson.databind.version>2.11.0</jackson.databind.version>
    <servlet-api.version>4.0.1</servlet-api.version>
    <jetty.version>9.4.28.v20200408</jetty.version>
    <jopt-simple.version>5.0.4</jopt-simple.version>
    <junit.version>4.13</junit.version>
    <netty.version>4.1.50.Final</netty.version>
    <protobuf.version>3.11.1</protobuf.version>
    <thrift.version>0.13.0</thrift.version>
    <slf4j.version>1.7.30</slf4j.version>
    <snappy.version>1.1.7.5</snappy.version>
    <velocity.version>2.2</velocity.version>
    <maven.version>3.3.9</maven.version>
    <ant.version>1.10.8</ant.version>
    <commons-cli.version>1.4</commons-cli.version>
    <commons-compress.version>1.20</commons-compress.version>
    <commons-lang.version>3.9</commons-lang.version>
    <tukaani.version>1.8</tukaani.version>
    <easymock.version>4.2</easymock.version>
    <hamcrest.version>2.2</hamcrest.version>
    <grpc.version>1.29.0</grpc.version>
    <zstd-jni.version>1.4.5-2</zstd-jni.version>
    <!-- version properties for plugins -->
    <archetype-plugin.version>3.1.2</archetype-plugin.version>
    <bundle-plugin-version>4.1.0</bundle-plugin-version>
    <compiler-plugin.version>3.8.1</compiler-plugin.version>
    <exec-plugin.version>1.6.0</exec-plugin.version>
    <file-management.version>3.0.0</file-management.version>
    <jar-plugin.version>3.2.0</jar-plugin.version>
    <javacc-plugin.version>2.6</javacc-plugin.version>
    <maven-site-plugin.version>3.9.0</maven-site-plugin.version>
    <jacoco-maven-plugin.version>0.8.5</jacoco-maven-plugin.version>
    <plugin-plugin.version>3.6.0</plugin-plugin.version>
    <plugin-tools-javadoc.version>3.5</plugin-tools-javadoc.version>
    <shade-plugin.version>3.2.3</shade-plugin.version>
    <surefire-plugin.version>3.0.0-M4</surefire-plugin.version>
    <jacoco-maven-plugin.version>0.8.5</jacoco-maven-plugin.version>

    <sonar.coverage.jacoco.xmlReportPaths>${project.basedir}/../tests/target/site/jacoco-aggregate/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>

  </properties>

  <modules>
    <module>avro</module>
    <module>compiler</module>
    <module>maven-plugin</module>
    <module>ipc</module>
    <module>ipc-jetty</module>
    <module>ipc-netty</module>
    <module>trevni</module>
    <module>tools</module>
    <module>mapred</module>
    <module>protobuf</module>
    <module>thrift</module>
    <module>archetypes</module>
    <module>grpc</module>
    <module>perf</module>
    <module>tests</module>
  </modules>

  <build>
    <!-- defines the default plugin configuration that all child projects inherit from.
      Like dependencyManagement, this provides configuration, version, and other
      parameters if the plugins are used by child projects -->
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${compiler-plugin.version}</version>
          <configuration>
            <source>1.8</source>
            <target>1.8</target>
            <compilerArgs>
              <arg>-parameters</arg>
              <!--<arg>-Werror</arg>-->
              <arg>-Xlint:all</arg>
              <!-- Override options warnings to support cross-compilation -->
              <arg>-Xlint:-options</arg>
              <!-- Temporary lint overrides, to be removed over time. -->
              <arg>-Xlint:-rawtypes</arg>
              <arg>-Xlint:-serial</arg>
              <arg>-Xlint:-unchecked</arg>
              <!--<arg>-Xlint:sunapi</arg>-->
              <!--<arg>-XDenableSunApiLintControl</arg>-->
            </compilerArgs>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${jar-plugin.version}</version>
          <!--We want to be able to resuse the test-jars for mapred
              to test avro-tool
              see https://maven.apache.org/guides/mini/guide-attached-tests.html
          -->
          <executions>
            <execution>
              <goals>
                <goal>test-jar</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <archive>
              <manifest>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${surefire-plugin.version}</version>

          <dependencies>
            <dependency>
              <groupId>org.apache.maven.surefire</groupId>
              <artifactId>surefire-junit4</artifactId>
              <version>${surefire-plugin.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${javadoc-plugin.version}</version>
          <configuration>
            <links>
              <link>https://docs.oracle.com/javase/8/docs/api/</link>
              <link>https://hadoop.apache.org/docs/current/api/</link>
            </links>
            <tagletArtifacts>
              <tagletArtifact>
                <groupId>org.apache.maven.plugin-tools</groupId>
                <artifactId>maven-plugin-tools-javadoc</artifactId>
                <version>${plugin-tools-javadoc.version}</version>
              </tagletArtifact>
            </tagletArtifacts>
            <excludePackageNames>org.apache.avro.compiler.idl,*.internal</excludePackageNames>
            <quiet>true</quiet>
            <encoding>UTF-8</encoding>
            <additionalJOption>-Xdoclint:none</additionalJOption>
            <detectOfflineLinks>false</detectOfflineLinks>
            <notimestamp>true</notimestamp>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${source-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>javacc-maven-plugin</artifactId>
          <version>${javacc-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>${exec-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-plugin-plugin</artifactId>
          <version>${plugin-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${shade-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>${antrun-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>${spotless-maven-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>${bundle-plugin-version}</version>
        <extensions>true</extensions>
        <inherited>true</inherited>
        <configuration>
          <instructions>
            <Bundle-Name>${project.name}</Bundle-Name>
            <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
            <Export-Package>${osgi.export}</Export-Package>
            <Import-Package>${osgi.import}</Import-Package>
            <DynamicImport-Package>${osgi.dynamic.import}</DynamicImport-Package>
            <Private-Package>${osgi.private}</Private-Package>
            <Require-Bundle>${osgi.bundles}</Require-Bundle>
            <Bundle-Activator>${osgi.activator}</Bundle-Activator>
          </instructions>
          <supportedProjectTypes>
            <supportedProjectType>bundle</supportedProjectType>
          </supportedProjectTypes>
          <unpackBundle>true</unpackBundle>
        </configuration>
        <executions>
          <execution>
            <id>bundle-manifest</id>
            <phase>process-classes</phase>
            <goals>
              <goal>manifest</goal>
            </goals>
          </execution>
        </executions>
      </plugin>


    </plugins>
  </build>

  <!-- dependencyManagement can be used to define dependency versions, scopes, and
    excludes to be shared by child projects. Child projects will not inherit these dependencies,
    rather they inherit the properties of the below dependencies (such as version) if
    the dependency is specified in the child. -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.databind.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.velocity</groupId>
        <artifactId>velocity-engine-core</artifactId>
        <version>${velocity.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-server</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-servlet</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-util</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>${servlet-api.version}</version>
      </dependency>
      <dependency>
        <groupId>net.sf.jopt-simple</groupId>
        <artifactId>jopt-simple</artifactId>
        <version>${jopt-simple.version}</version>
      </dependency>
      <!-- hadoop's execution environment provides its own jars. -->
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-client</artifactId>
        <version>${hadoop.version}</version>
        <exclusions>
          <exclusion> <!-- GPL -->
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.easymock</groupId>
        <artifactId>easymock</artifactId>
        <version>${easymock.version}</version>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-library</artifactId>
        <version>${hamcrest.version}</version>
      </dependency>
      <dependency>
        <groupId>org.xerial.snappy</groupId>
        <artifactId>snappy-java</artifactId>
        <version>${snappy.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-compress</artifactId>
        <version>${commons-compress.version}</version>
      </dependency>
      <dependency>
        <groupId>io.grpc</groupId>
        <artifactId>grpc-core</artifactId>
        <version>${grpc.version}</version>
      </dependency>
      <dependency>
        <groupId>io.grpc</groupId>
        <artifactId>grpc-stub</artifactId>
        <version>${grpc.version}</version>
      </dependency>
      <dependency>
        <groupId>io.grpc</groupId>
        <artifactId>grpc-netty</artifactId>
        <version>${grpc.version}</version>
      </dependency>
      <dependency>
        <groupId>org.tukaani</groupId>
        <artifactId>xz</artifactId>
        <version>${tukaani.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.luben</groupId>
        <artifactId>zstd-jni</artifactId>
        <version>${zstd-jni.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <!-- dependencies defines dependencies that all child projects share. Child projects
    will inherit these dependencies directly, and can opt out if necessary with <excludes> -->
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>${slf4j.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

</project>
